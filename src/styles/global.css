@import url("./_reset.css");

@design-tokens url("./generated-tokens.json") format("style-dictionary3");

:root {
	/* TODO: use a container unit based on width/height */
	--clip-size: 1.5rem;
	--clip-bottom-right: polygon(
		0 0,
		100% 0,
		100% calc(100% - var(--clip-size)),
		calc(100% - var(--clip-size)) 100%,
		0% 100%,
		0 0
	);

	--clip-bottom-left: polygon(
		0 0,
		100% 0,
		100% 100%,
		var(--clip-size) 100%,
		0 calc(100% - var(--clip-size)),
		0 0
	);

	--nav-x: 0;
	--width-nav: dt("width.nav");

	&.nav-open {
		--nav-x: calc(dt("width.nav") * -1);
	}
}

:where(html) {
	min-height: 100%;
	background-color: dt("color.site.bg");
	color: dt("color.site.text");
}

:where(body) {
	margin: 0;
	font-family: system-ui, Verdana, sans-serif;
	word-wrap: break-word;
	overflow-wrap: break-word;
	line-height: 1.5;
}

:where(h1, .title) {
	font-family: "Josefin Sans", sans-serif;
	font-style: normal;
	text-transform: uppercase;
}

:where(h2, .subtitle) {
	font-family: "Lora", serif;
	font-style: italic;
}

:where(.content) {
	min-height: 100%;

	background-color: dt("color.content.bg");
	color: dt("color.content.text");
}

:where(.content__header) {
	& > * {
		margin: 0;
	}

	& .subtitle {
		font-size: 1.2rem;
	}
}

:where(.copy) {
	padding: dt("step-2") dt("step-1");
	background-color: dt("color.light-1");

	& > * {
		margin: 0;
	}

	& > * + * {
		margin-top: dt("step-1");
	}

	& img {
		display: block;
		margin: dt("step-2") auto;
		max-height: 30ch;
	}
}

:where(.visually-hidden) {
	border: 0;
	clip: rect(0 0 0 0);
	height: auto;
	margin: 0;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
	white-space: nowrap;
}

:where(.clipped, .clipped--br) {
	clip-path: var(--clip-bottom-right);
}

:where(.clipped--bl) {
	clip-path: var(--clip-bottom-left);
}

:where(.iconbtn) {
	display: flex;
	align-items: center;
	gap: var(--size-1);

	&.iconbtn--stacked {
		flex-direction: column;
	}

	& svg {
		display: block;
		width: var(--icon-wh, dt("size.icon"));
		aspect-ratio: 1;
		stroke: currentColor;
	}
}
